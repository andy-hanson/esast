{"version":3,"sources":["util.js"],"names":[],"mappings":";;;;;;;;;;;AAKA,KAAM,eAAe,GAAG,IAAI,GAAG,EAAE,CAAA;AACjC,KAAM,qBAAqB,GAAG,IAAI,GAAG,EAAE,CAAA;;AAEhC,KACN,QAAQ,GAAG,kBAAA,IAAI,EAAI;AAClB,MAAI,CAAC,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;AACjC,MAAI,CAAC,KAAK,SAAS,EAAE;AACpB,IAAC,GAAG,KAZuC,UAAU,CAYtC,mBAAiB,IAAI,CAAC,CAAC,CAAA;AACtC,kBAAe,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;GAC5B;AACD,SAAO,CAAC,CAAA;EACR;KAED,yBAAyB,GAAG,mCAAA,YAAY,EAAI;AAC3C,MAAI,CAAC,GAAG,qBAAqB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAA;AAC/C,MAAI,CAAC,KAAK,SAAS,EAAE;AACpB,IAAC,GAAG,kBAnBiC,cAAc,CAmBhC,YAAY,CAAC,GAAG,KArBQ,UAAU,CAqBP,YAAY,CAAC,GAAG,KArBP,OAAO,CAqBQ,YAAY,CAAC,CAAA;AACnF,wBAAqB,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,CAAA;GAC1C;AACD,SAAO,CAAC,CAAA;EACR;KAED,MAAM,GAAG,gBAAC,MAAM,EAAE,YAAY;SAC7B,YAzBgC,gBAAgB,CAyB/B,MAAM,EAAE,yBAAyB,CAAC,YAAY,CAAC,CAAC;EAAA;KAElE,WAAW,GAAG,qBAAA,CAAC;SAAI,CAAC,iBA7BY,SAAS,AA6BA,GAAG,CAAC,GAAG,KA9BxB,mBAAmB,CA8ByB,CAAC,CAAC;EAAA;KAEtE,YAAY,GAAG,sBAAA,CAAC;SAAI,CAAC,YAAY,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAE,WAAW,CAAC,CAAC,CAAC,CAAE;EAAA;KAEhF,UAAU,GAAG,oBAAA,GAAG;SACf,KAlC0C,cAAc,CAkCzC,KAlChB,aAAa,CAkCiB,KAnCe,UAAU,CAmCd,OAAO,CAAC,EAAE,CAAE,KAnCI,OAAO,CAmCH,GAAG,CAAC,CAAE,CAAC,CAAC;EAAA;;;;AAGrE,MAAK,GAAG,eAAA,KAAK;SACZ,YApCO,uBAAuB,CAoCN,KAvCjB,cAAc,CAuCkB,CAAE,KAtC3B,eAAe,CAsC4B,KAAK,CAAC,CAAE,CAAC,EAAE,KAAK,CAAC;EAAA,CAAA;SA9B3E,QAAQ,GAAR,QAAQ;SASR,yBAAyB,GAAzB,yBAAyB;SASzB,MAAM,GAAN,MAAM;SAGN,WAAW,GAAX,WAAW;SAEX,YAAY,GAAZ,YAAY;SAEZ,UAAU,GAAV,UAAU;SAIV,KAAK,GAAL,KAAK","file":"util.js","sourcesContent":["import { BlockStatement, ExpressionStatement, Identifier, Literal,\n\tNewExpression, ReturnStatement, Statement, ThrowStatement } from './ast'\nimport mangleIdentifier, { needsMangle, propertyNameOk } from './mangle-identifier'\nimport { functionExpressionThunk, memberExpression } from './specialize'\n\nconst specialNameToId = new Map()\nconst propertyToIdOrLiteral = new Map()\n\nexport const\n\tidCached = name => {\n\t\tlet _ = specialNameToId.get(name)\n\t\tif (_ === undefined) {\n\t\t\t_ = Identifier(mangleIdentifier(name))\n\t\t\tspecialNameToId.set(name, _)\n\t\t}\n\t\treturn _\n\t},\n\n\tpropertyIdOrLiteralCached = propertyName => {\n\t\tlet _ = propertyToIdOrLiteral.get(propertyName)\n\t\tif (_ === undefined) {\n\t\t\t_ = propertyNameOk(propertyName) ? Identifier(propertyName) : Literal(propertyName)\n\t\t\tpropertyToIdOrLiteral.set(propertyName, _)\n\t\t}\n\t\treturn _\n\t},\n\n\tmember = (object, propertyName) =>\n\t\tmemberExpression(object, propertyIdOrLiteralCached(propertyName)),\n\n\ttoStatement = _ => _ instanceof Statement ? _ : ExpressionStatement(_),\n\n\ttoStatements = _ => _ instanceof Array ? _.map(toStatement) : [ toStatement(_) ],\n\n\tthrowError = msg =>\n\t\tThrowStatement(NewExpression(Identifier('Error'), [ Literal(msg) ])),\n\n\t// TODO:ES6 arrow functions\n\tthunk = value =>\n\t\tfunctionExpressionThunk(BlockStatement([ ReturnStatement(value) ]), false)\n"],"sourceRoot":"/src"}