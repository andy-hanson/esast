{"version":3,"sources":["private/render/Rx.js"],"names":[],"mappings":"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","file":"private/render/Rx.js","sourcesContent":["import { Node } from '../../ast'\nimport { isEmpty, type } from '../util'\nimport { SourceNode } from './source-map/source-node'\nimport { SourceMapGenerator } from './source-map/source-map-generator'\nimport { Pos, StartColumn, StartLine } from '../../Loc'\n\nexport default class Rx {\n\tconstructor(inFilePath, outFilePath) {\n\t\tthis.indentStr = ''\n\t\tthis.strParts = [ ]\n\n\t\tthis.usingSourceMaps = inFilePath !== undefined\n\t\tif (this.usingSourceMaps) {\n\t\t\tthis.inFilePath = inFilePath\n\t\t\tthis.map = new SourceMapGenerator({\n\t\t\t\tfile: outFilePath\n\t\t\t\t// skipValidation: true\n\t\t\t})\n\t\t\tthis.line = StartLine\n\t\t\tthis.column = StartColumn\n\n\t\t\tthis.lastMappedAst = null\n\t\t}\n\t}\n\n\tfinish() {\n\t\treturn this.strParts.join('')\n\t}\n\n\te(ast) {\n\t\tthis.curAst = ast\n\t\tast.render(this)\n\t}\n\n\t// str may not contain newlines.\n\to(str) {\n\t\tthis._o(str)\n\t\tthis._mapStr(str)\n\t}\n\n\tinterleave(asts, str) {\n\t\tif (!isEmpty(asts)) {\n\t\t\tconst maxI = asts.length - 1\n\t\t\tfor (let i = 0; i < maxI; i = i + 1) {\n\t\t\t\tthis.e(asts[i])\n\t\t\t\tthis.o(str)\n\t\t\t}\n\t\t\tthis.e(asts[maxI])\n\t\t}\n\t}\n\n\tparen(asts) {\n\t\tthis.o('(')\n\t\tthis.interleave(asts, ', ')\n\t\tthis.o(')')\n\t}\n\n\tblock(lines, lineSeparator) {\n\t\tif (isEmpty(lines))\n\t\t\tthis.o('{ }')\n\t\telse {\n\t\t\tlineSeparator = lineSeparator\n\t\t\tthis.o('{')\n\t\t\tthis.indent(() => {\n\t\t\t\tthis.nl()\n\t\t\t\tconst maxI = lines.length - 1\n\t\t\t\tfor (let i = 0; i < maxI; i = i + 1) {\n\t\t\t\t\tthis.e(lines[i])\n\t\t\t\t\tthis.o(lineSeparator)\n\t\t\t\t\tthis.nl()\n\t\t\t\t}\n\t\t\t\tthis.e(lines[maxI])\n\t\t\t})\n\t\t\tthis.nl()\n\t\t\tthis.o('}')\n\t\t}\n\t}\n\n\tlines(lines) {\n\t\tconst maxI = lines.length - 1\n\t\tfor (let i = 0; i < maxI; i = i + 1) {\n\t\t\tthis.e(lines[i])\n\t\t\tthis.o(';')\n\t\t\tthis.nl()\n\t\t}\n\t\tthis.e(lines[maxI])\n\t}\n\n\tindent(doIndented) {\n\t\tconst oldIndent = this.indentStr\n\t\tthis.indentStr = this.indentStr + '\\t'\n\t\tdoIndented()\n\t\tthis.indentStr = oldIndent\n\t}\n\n\tnl() {\n\t\tthis._o('\\n')\n\t\tthis._mapNewLine()\n\t\tthis.o(this.indentStr)\n\t}\n\n\t// Private\n\n\t_o(str) {\n\t\tthis.strParts.push(str)\n\t}\n\n\t_mapStr(str) {\n\t\tif (this.usingSourceMaps) {\n\t\t\tif (this.curAst.loc && this.curAst !== this.lastMappedAst) {\n\t\t\t\tthis.map.addMapping({\n\t\t\t\t\tsource: this.inFilePath,\n\t\t\t\t\toriginal: this.curAst.loc.start,\n\t\t\t\t\tgenerated: Pos(this.line, this.column)\n\t\t\t\t})\n\t\t\t\tthis.lastMappedAst = this.curAst\n\t\t\t}\n\t\t\tthis.column = this.column + str.length\n\t\t}\n\t}\n\n\t_mapNewLine() {\n\t\tif (this.usingSourceMaps) {\n\t\t\tthis.line = this.line + 1\n\t\t\tthis.column = StartColumn\n\t\t\t// Mappings end at end of line.\n\t\t\tthis.lastMappedAst = null\n\t\t}\n\t}\n}\n"],"sourceRoot":"/src"}