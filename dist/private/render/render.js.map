{"version":3,"sources":["private/render/render.js"],"names":[],"mappings":"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","file":"private/render/render.js","sourcesContent":["import * as EsAst from '../../ast'\nimport { assert, implementMany, isEmpty } from '../util'\nimport { SourceNode } from './source-map/source-node'\nimport Rx from './Rx'\n\n// TODO: 'modulePath' parameter is kludge\nexport default (ast, inFilePath, outFilePath) => {\n\tconst node = new Rx(inFilePath).render(ast)\n\treturn outFilePath === undefined ?\n\t\tnew SourceNode(null, null, null, node).toString() :\n\t\tnode.toStringWithSourceMap({ file: outFilePath })\n}\n\nconst rCall = (_, rx) => {\n\trx.e(_.callee)\n\trx.o('(')\n\trx.interleave(_.arguments, ', ')\n\trx.o(')')\n}\n\nimplementMany(EsAst, 'render', {\n\tProgram: (_, rx) => rx.interleave(_.body, rx.snl),\n\tIdentifier: (_, rx) => rx.o(_.name),\n\tBlockStatement: (_, rx) => rx.block(_.body, rx.snl),\n\tFunctionExpression(_, rx) {\n\t\trx.o(_.generator ? 'function*' : 'function')\n\t\tif (_.id) {\n\t\t\trx.o(' ')\n\t\t\trx.e(_.id)\n\t\t}\n\t\trx.o('(')\n\t\trx.interleave(_.params, ', ')\n\t\trx.o(') ')\n\t\trx.e(_.body)\n\t},\n\tLiteral(_, rx) {\n\t\tif (_.value === null)\n\t\t\trx.o('null')\n\t\telse if (typeof _.value === 'string')\n\t\t\trx.o(strEscape(_.value))\n\t\telse\n\t\t\trx.o(_.value.toString())\n\t},\n\tThisExpression: (_, rx) => rx.o('this'),\n\tArrayExpression(_, rx) {\n\t\trx.o('[ ')\n\t\trx.interleave(_.elements, ', ')\n\t\trx.o(' ]')\n\t},\n\tProperty(_, rx) {\n\t\tif (_.kind === 'init') {\n\t\t\trx.e(_.key)\n\t\t\trx.o(': ')\n\t\t\trx.e(_.value)\n\t\t} else {\n\t\t\tassert(_.kind === 'get')\n\t\t\trx.o('get ')\n\t\t\trx.e(_.key)\n\t\t\trx.o('() ')\n\t\t\tassert(_.value instanceof EsAst.FunctionExpression)\n\t\t\tassert(_.value.id === null && isEmpty(_.value.params) && !_.value.generator)\n\t\t\trx.e(_.value.body)\n\t\t}\n\t},\n\tObjectExpression: (_, rx) => {\n\t\tif (isEmpty(_.properties))\n\t\t\trx.o('{}')\n\t\telse\n\t\t\trx.block(_.properties, rx.cnl)\n\t},\n\tNewExpression(_, rx) {\n\t\trx.o('new ')\n\t\trCall(_, rx)\n\t},\n\tCallExpression: rCall,\n\tMemberExpression(_, rx) {\n\t\trx.e(_.object)\n\t\tif (_.computed) {\n\t\t\trx.o('[')\n\t\t\trx.e(_.property)\n\t\t\trx.o(']')\n\t\t} else {\n\t\t\trx.o('.')\n\t\t\trx.e(_.property)\n\t\t}\n\t},\n\tUnaryExpression: (_, rx) => unary(rx, _.operator, _.argument),\n\tBinaryExpression: (_, rx) => binary(rx, _.operator, _.left, _.right),\n\tAssignmentExpression: (_, rx) => binary(rx, _.operator, _.left, _.right),\n\tYieldExpression(_, rx) {\n\t\trx.o('(')\n\t\tunary(rx, _.delegate ? 'yield*' : 'yield', _.argument)\n\t\trx.o(')')\n\t},\n\tVariableDeclarator(_, rx) {\n\t\trx.e(_.id)\n\t\trx.o(' = ')\n\t\tif (_.init)\n\t\t\trx.e(_.init)\n\t},\n\tVariableDeclaration(_, rx) {\n\t\trx.o(_.kind)\n\t\trx.o(' ')\n\t\trx.interleave(_.declarations, ', ')\n\t},\n\tReturnStatement: (_, rx) => unary(rx, 'return', _.argument),\n\tThrowStatement: (_, rx) => unary(rx, 'throw', _.argument),\n\tLabeledStatement: (_, rx) => binary(rx, ': ', _.label, _.body),\n\tWhileStatement(_, rx) {\n\t\trx.o('while (')\n\t\trx.e(_.test)\n\t\trx.o(') ')\n\t\trx.e(_.body)\n\t},\n\tDebuggerStatement: (_, rx) => rx.o('debugger'),\n\tExpressionStatement: (_, rx) => rx.e(_.expression),\n\tIfStatement(_, rx) {\n\t\trx.o('if (')\n\t\trx.e(_.test)\n\t\trx.o(') ')\n\t\trx.e(_.consequent)\n\t\tif (_.alternate) {\n\t\t\trx.o(' else ')\n\t\t\trx.e(_.alternate)\n\t\t}\n\t},\n\tBreakStatement(_, rx) {\n\t\trx.o('break')\n\t\tif (_.label) {\n\t\t\trx.o(' ')\n\t\t\trx.e(_.label)\n\t\t}\n\t},\n\tSwitchCase(_, rx) {\n\t\tif (_.test) {\n\t\t\trx.o('case ')\n\t\t\trx.e(_.test)\n\t\t}\n\t\telse\n\t\t\trx.o('default')\n\t\trx.o(':')\n\t\tif (_.consequent.length === 1) {\n\t\t\trx.o(' ')\n\t\t\trx.e(_.consequent[0])\n\t\t} else {\n\t\t\trx.indent(() => {\n\t\t\t\trx.o(rx.nl)\n\t\t\t\trx.interleave(_.consequent, rx.snl)\n\t\t\t})\n\t\t\trx.o(rx.nl)\n\t\t}\n\t},\n\tSwitchStatement(_, rx) {\n\t\trx.o('switch (')\n\t\trx.e(_.discriminant)\n\t\trx.o(') ')\n\t\trx.block(_.cases, rx.nl)\n\t}\n})\n\nconst unary = (rx, kind, argument) => {\n\trx.o(kind)\n\trx.o(' ')\n\trx.e(argument)\n}\n\nconst binary = (rx, kind, left, right) => {\n\trx.e(left)\n\trx.o(' ')\n\trx.o(kind)\n\trx.o(' ')\n\trx.e(right)\n}\n\n\nconst strEscape = str =>\n\t`\"${str.replace(/[\\\\\"\\n\\t]/g, ch => strEscapes[ch])}\"`\nconst strEscapes = {\n\t'\\\\': '\\\\\\\\',\n\t'\"': '\\\\\"',\n\t'\\n': '\\\\n',\n\t'\\t': '\\\\t'\n}\n"],"sourceRoot":"/src"}