{"version":3,"sources":["private/util.js"],"names":[],"mappings":";;;;;;AAAO,KACN,MAAM,GAAG,gBAAA,IAAI,EAAI;AAChB,MAAI,CAAC,IAAI,EACR,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAA;EACrC;KAED,aAAa,GAAG,uBAAC,MAAM,EAAE,UAAU,EAAE,UAAU,EAAK;AACnD,QAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAA,IAAI,EAAI;AACvC,SAAM,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAA;GACrD,CAAC,CAAA;AACF,SAAO,UAAC,MAAM;qCAAK,IAAI;AAAJ,QAAI;;;UAAK,MAAM,CAAC,UAAU,OAAC,CAAlB,MAAM,GAAa,MAAM,SAAK,IAAI,EAAC;GAAA,CAAA;EAC/D;KAED,OAAO,GAAG,iBAAA,GAAG;SAAI,GAAG,CAAC,MAAM,KAAK,CAAC;EAAA;KAEjC,IAAI,GAAG,cAAC,GAAG,EAAE,OAAO,EAAE,MAAM,EAAK;AAChC,MAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,EACrD,MAAM,IAAI,KAAK,2BAAyB,OAAO,eAAU,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAG,CAAA;AAC7E,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAA;AACpB,GAAC,CAAC,OAAO,CAAC,GAAG,MAAM,CAAA;AACnB,SAAO,CAAC,CAAA;EACR;KAED,IAAI,GAAG,cAAC,QAAQ,EAAE,OAAO,EAAK;AAC7B,MAAI,CAAE,OAAO,CAAC,SAAS,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,AAAC,EACvD,MAAM,IAAI,KAAK,MAAI,QAAQ,kBAAa,OAAO,OAAI,CAAA;EACpD,CAAA;;SAzBD,MAAM,GAAN,MAAM;SAKN,aAAa,GAAb,aAAa;SAOb,OAAO,GAAP,OAAO;SAEP,IAAI,GAAJ,IAAI;SAQJ,IAAI,GAAJ,IAAI;AAKL,KAAM,KAAK,GAAG,eAAA,GAAG,EAAI;AACpB,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAA;AACpD,QAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAA,IAAI,EAAI;AAC/C,KAAE,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAA;GACpB,CAAC,CAAA;AACF,SAAO,EAAE,CAAA;EACT,CAAA","file":"private/util.js","sourcesContent":["export const\n\tassert = cond => {\n\t\tif (!cond)\n\t\t\tthrow new Error('Assertion failed.')\n\t},\n\n\timplementMany = (holder, methodName, nameToImpl) => {\n\t\tObject.keys(nameToImpl).forEach(name => {\n\t\t\tholder[name].prototype[methodName] = nameToImpl[name]\n\t\t})\n\t\treturn (target, ...args) => target[methodName](target, ...args)\n\t},\n\n\tisEmpty = arr => arr.length === 0,\n\n\tpAdd = (obj, newName, newVal) => {\n\t\tif (Object.prototype.hasOwnProperty.call(obj, newName))\n\t\t\tthrow new Error(`Already has property ${newName}, have ${Object.keys(obj)}`)\n\t\tconst _ = clone(obj)\n\t\t_[newName] = newVal\n\t\treturn _\n\t},\n\n\ttype = (instance, itsType) => {\n\t\tif (!(itsType.prototype.isPrototypeOf(Object(instance))))\n\t\t\tthrow new Error(`${instance} is not a ${itsType}.`)\n\t}\n\nconst clone = obj => {\n\tconst nu = Object.create(Object.getPrototypeOf(obj))\n\tObject.getOwnPropertyNames(obj).forEach(name => {\n\t\tnu[name] = obj[name]\n\t})\n\treturn nu\n}\n"],"sourceRoot":"/src"}