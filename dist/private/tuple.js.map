{"version":3,"sources":["private/tuple.js"],"names":[],"mappings":";;;kBAEe,UAAC,IAAI,EAAE,SAAS,EAAoB;oCAAf,UAAU;AAAV,aAAU;;;AAC7C,MAAI,KAAK,GAAG,EAAG,CAAA;AACf,QAJQ,MAAM,CAIP,UAAU,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC,CAAA;AACnC,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;AAC/C,QAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;GAAA,AAC7D,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC;UAAI,CAAC,CAAC,IAAI;GAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;;AAE5C,MAAI,IAAI,wBAAsB,IAAI,SAAI,IAAI,qCAClB,IAAI,2BACd,IAAI,SAAI,IAAI,SAC1B,CAAA;;AAEA,OAAK,CAAC,OAAO,CAAC,gBAAc;OAAX,IAAI,QAAJ,IAAI;;AACpB,OAAI,GAAG,IAAI,cACF,IAAI,WAAM,IAAI,mBAAc,IAAI,6BAAwB,IAAI,kBAAc,CAAA;GACnF,CAAC,CAAA;AACF,MAAI,GAAG,IAAI,GAAG,yBAAyB,CAAA;AACvC,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAA;AAC5B,KAAG,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE;AACjE,cAAW,EAAE,GAAG;AAChB,WAAQ,EAAA,oBAAG;AAAE,WAAO,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;IAAE;;AAEtD,gBAAa,EAAA,yBAAG,EAAG;AACnB,SAAM,EAAA,kBAAG;;;AACR,QAAM,GAAG,GAAG,EAAG,CAAA;AACf,OAAG,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;AACpB,UAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,UAAA,GAAG,EAAI;AAAE,QAAG,CAAC,GAAG,CAAC,GAAG,MAAK,GAAG,CAAC,CAAA;KAAE,CAAC,CAAA;AACjE,WAAO,GAAG,CAAA;IACV;GACD,CAAC,CAAA;;AAEF,KAAG,CAAC,KAAK,GAAG,KAAK,CAAA;;AAEjB,SAAO,GAAG,CAAA;EACV","file":"private/tuple.js","sourcesContent":["import { assert, pAdd } from './util'\n\nexport default (name, superType, ...namesTypes) => {\n\tlet props = [ ]\n\tassert(namesTypes.length % 2 === 0)\n\tfor (let i = 0; i < namesTypes.length; i = i + 2)\n\t\tprops.push({ name: namesTypes[i], type: namesTypes[i + 1] })\n\tlet args = props.map(_ => _.name).join(', ')\n\n\tlet body = `return function ${name}(${args}) {\n\tif (!(this instanceof ${name}))\n\t\treturn new ${name}(${args});\n`\n\n\tprops.forEach(({ name }) => {\n\t\tbody = body +\n\t\t\t`this.${name} = ${name}; if (this.${name} === undefined) this.${name} = null;\\n\\t`\n\t})\n\tbody = body + 'this.postConstruct()\\n}'\n\tconst ctr = Function(body)()\n\tctr.prototype = Object.assign(Object.create(superType.prototype), {\n\t\tconstructor: ctr,\n\t\ttoString() { return JSON.stringify(this, null, '\\t') },\n\t\t// Default is to do nothing. May be overridden.\n\t\tpostConstruct() { },\n\t\ttoJSON() {\n\t\t\tconst obj = { }\n\t\t\tobj.type = this.type\n\t\t\tObject.keys(this).sort().forEach(key => { obj[key] = this[key] })\n\t\t\treturn obj\n\t\t}\n\t})\n\n\tctr.props = props\n\n\treturn ctr\n}\n"],"sourceRoot":"/src"}