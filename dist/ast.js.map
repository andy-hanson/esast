{"version":3,"sources":["ast.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;KAIa,IAAI,YAAJ,IAAI;wBAAJ,IAAI;;;SAAJ,IAAI,GAAJ,IAAI;;KACJ,SAAS;WAAT,SAAS;yBAAT,SAAS;;;;;;;YAAT,SAAS;;SAAT,SAAS;IAAS,IAAI;;SAAtB,SAAS,GAAT,SAAS;;KACT,UAAU;WAAV,UAAU;yBAAV,UAAU;;;;;;;YAAV,UAAU;;SAAV,UAAU;IAAS,IAAI;;SAAvB,UAAU,GAAV,UAAU;;KAEV,QAAQ;WAAR,QAAQ;yBAAR,QAAQ;;;;;;;YAAR,QAAQ;;SAAR,QAAQ;IAAS,IAAI;;SAArB,QAAQ,GAAR,QAAQ;;KACR,WAAW;WAAX,WAAW;yBAAX,WAAW;;;;;;;YAAX,WAAW;;SAAX,WAAW;IAAS,IAAI;;SAAxB,WAAW,GAAX,WAAW;;KACX,OAAO;WAAP,OAAO;yBAAP,OAAO;;;;;;;YAAP,OAAO;;SAAP,OAAO;IAAS,IAAI;;SAApB,OAAO,GAAP,OAAO;;AAEpB,KAAM,QAAQ,GAAG,kBAAA,SAAS;SAAI,UAAC,IAAI,EAAoB;qCAAf,UAAU;AAAV,cAAU;;;AACjD,OAAM,IAAI,GAAG,yBAAM,IAAI,EAAE,SAAS,SAAK,UAAU,EAAC,CAAA;AAClD,SAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAA;AAC7C,UAAO,IAAI,CAAA;GACX;EAAA,CAAA;AACD,KACC,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC;KAClB,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC;KACvB,CAAC,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAA;;;AAGzB,KAAM,QAAQ,GAAG,kBAAA,CAAC;SAAI,CAAC;EAAA,CAAA;AACvB,KAAM,KAAK,GAAG,eAAC,CAAC,EAAE,CAAC;SAAK,CAAC;EAAA,CAAA;;AAEzB,KAAM,KAAK,GAAG,eAAC,CAAC,EAAE,UAAU,EAAK;AAChC,QAAM,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,EAAE,UAAU,CAAC,CAAA;AACtC,SAAO,CAAC,CAAA;EACR,CAAA;;AAEM,KACN,aAAa,GAAG,IAAI,GAAG,CAAC,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAE,CAAC;KAC3E,cAAc,GAAG,IAAI,GAAG,CAAC,CACxB,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EACxB,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EACpB,IAAI,EAAE,IAAI,EAAE,KAAK,EACjB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EACvB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EACnB,YAAY,CAAC,CAAC;KACf,eAAe,GAAG,IAAI,GAAG,CAAC,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;KACzC,kBAAkB,GAAG,IAAI,GAAG,CAAC,CAC5B,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EACjC,KAAK,EAAE,KAAK,EAAE,MAAM,EACpB,IAAI,EAAE,IAAI,EAAE,IAAI,CAChB,CAAC;KACF,cAAc,GAAG,IAAI,GAAG,CAAC,CAAE,IAAI,EAAE,IAAI,CAAE,CAAC;KACxC,oBAAoB,GAAG,IAAI,GAAG,CAAC,CAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAE,CAAC;KACzE,YAAY,GAAG,IAAI,GAAG,CAAC,CAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAE,CAAC,CAAA;;SAhBhD,aAAa,GAAb,aAAa;SACb,cAAc,GAAd,cAAc;SAOd,eAAe,GAAf,eAAe;SACf,kBAAkB,GAAlB,kBAAkB;SAKlB,cAAc,GAAd,cAAc;SACd,oBAAoB,GAApB,oBAAoB;SACpB,YAAY,GAAZ,YAAY;AAEN,KACN,OAAO,GAAG,CAAC,CAAC,SAAS,EACpB,MAAM,EAAE,CAAC,SAAS,CAAC,CAAC;KACrB,UAAU,GAAG,CAAC,CAAC,YAAY,EAC1B,MAAM,EAAE,MAAM,CAAC;;;;AAGhB,eAAc,GAAG,CAAC,CAAC,gBAAgB,CAAC;KACpC,cAAc,GAAG,CAAC,CAAC,gBAAgB,EAClC,MAAM,EAAE,CAAC,SAAS,CAAC,CAAC;KACrB,mBAAmB,GAAG,CAAC,CAAC,qBAAqB,EAC5C,YAAY,EAAE,UAAU,CAAC;KAC1B,WAAW,GAAG,CAAC,CAAC,aAAa,EAC5B,MAAM,EAAE,UAAU,EAClB,YAAY,EAAE,SAAS,EACvB,WAAW,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;KAClC,gBAAgB,GAAG,CAAC,CAAC,kBAAkB,EACtC,OAAO,EAAE,UAAU,EACnB,MAAM,EAAE,SAAS,CAAC;KACnB,cAAc,GAAG,CAAC,CAAC,gBAAgB,EAClC,OAAO,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;KAC/B,iBAAiB,GAAG,CAAC,CAAC,mBAAmB,EACxC,OAAO,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC;KAC/B,UAAU,GAAG,CAAC,CAAC,YAAY,EAC1B,MAAM,EAAE,UAAU,EAClB,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC;KAC3B,eAAe,GAAG,CAAC,CAAC,iBAAiB,EACpC,cAAc,EAAE,UAAU,EAC1B,OAAO,EAAE,CAAC,UAAU,CAAC,EACrB,SAAS,EAAE,OAAO,CAAC;KACpB,eAAe,GAAG,CAAC,CAAC,iBAAiB,EACpC,UAAU,EAAE,UAAU,CAAC;KACxB,cAAc,GAAG,CAAC,CAAC,gBAAgB,EAClC,UAAU,EAAE,UAAU,CAAC;KAExB,WAAW,GAAG,CAAC,CAAC,aAAa,EAC5B,OAAO,EAAE,OAAO,EAChB,MAAM,EAAE,cAAc,CAAC;KACxB,YAAY,GAAG,CAAC,CAAC,cAAc,EAC9B,OAAO,EAAE,cAAc,EACvB,SAAS,EAAE,QAAQ,CAAC,WAAW,CAAC,EAChC,WAAW,EAAE,QAAQ,CAAC,cAAc,CAAC,CAAC;KACvC,cAAc,GAAG,CAAC,CAAC,gBAAgB,EAClC,MAAM,EAAE,UAAU,EAClB,MAAM,EAAE,SAAS,CAAC;KACnB,gBAAgB,GAAG,CAAC,CAAC,kBAAkB,EACtC,MAAM,EAAE,SAAS,EACjB,MAAM,EAAE,UAAU,CAAC;KACpB,YAAY,GAAG,CAAC,CAAC,cAAc,EAC9B,MAAM,EAAE,QAAQ,CAAC,KAAK,CAAC,mBAAmB,EAAE,UAAU,CAAC,CAAC,EACxD,MAAM,EAAE,QAAQ,CAAC,UAAU,CAAC,EAC5B,QAAQ,EAAE,QAAQ,CAAC,UAAU,CAAC,EAC9B,MAAM,EAAE,SAAS,CAAC;KACnB,cAAc,GAAG,CAAC,CAAC,gBAAgB,EAClC,MAAM,EAAE,KAAK,CAAC,mBAAmB,EAAE,UAAU,CAAC,EAC9C,OAAO,EAAE,UAAU,EACnB,MAAM,EAAE,SAAS,CAAC;KACnB,cAAc,GAAG,CAAC,CAAC,gBAAgB,EAClC,MAAM,EAAE,KAAK,CAAC,mBAAmB,EAAE,UAAU,CAAC,EAC9C,OAAO,EAAE,UAAU,EACnB,MAAM,EAAE,SAAS,CAAC;KACnB,iBAAiB,GAAG,CAAC,CAAC,mBAAmB,CAAC;;;;;AAI1C,oBAAmB,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,qBAAqB,EAChE,IAAI,EAAE,UAAU,EAChB,QAAQ,EAAE,CAAC,UAAU,CAAC,EACtB,MAAM,EAAE,cAAc,EACtB,WAAW,EAAE,OAAO,CAAC;KAEtB,kBAAkB,GAAG,CAAC,CAAC,oBAAoB,EAC1C,IAAI,EAAE,OAAO,EACb,MAAM,EAAE,UAAU,CAAC;KACpB,mBAAmB,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,qBAAqB,EAChE,MAAM,EAAE,MAAM,EACd,cAAc,EAAE,CAAC,kBAAkB,CAAC,CAAC;;;;AAGtC,eAAc,GAAG,CAAC,CAAC,gBAAgB,CAAC;KACpC,eAAe,GAAG,CAAC,CAAC,iBAAiB,EACpC,UAAU,EAAE,CAAC,UAAU,CAAC,CAAC;KAC1B,QAAQ,GAAG,CAAC,CAAC,UAAU,EACtB,MAAM,EAAE,YAAY;;AAEpB,MAAK,EAAE,KAAK,CAAC,OAAO,EAAE,UAAU,CAAC,EACjC,OAAO,EAAE,UAAU,CAAC;KACrB,gBAAgB,GAAG,CAAC,CAAC,kBAAkB,EACtC,YAAY,EAAE,CAAC,QAAQ,CAAC,CAAC;;;AAE1B,mBAAkB,GAAG,KAAK,CACzB,CAAC,CAAC,oBAAoB,EACrB,IAAI,EAAE,UAAU,EAChB,QAAQ,EAAE,CAAC,UAAU,CAAC,EACtB,MAAM,EAAE,cAAc,EACtB,WAAW,EAAE,OAAO,CAAC,EACtB;AACC,eAAa,EAAA,yBAAG;AACf,OAAI,CAAC,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;GACxC;EACD,CAAC;;;AAEH,wBAAuB,GAAG,CAAC,CAAC,iBAAiB,EAC5C,QAAQ,EAAE,CAAC,OAAO,CAAC,EACnB,MAAM,EAAE,KAAK,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;KAC3C,kBAAkB,GAAG,CAAC,CAAC,oBAAoB,EAC1C,aAAa,EAAE,CAAE,UAAU,CAAE,CAAC;KAC/B,eAAe,GAAG,CAAC,CAAC,iBAAiB,EACpC,UAAU,EAAE,aAAa,EACzB,UAAU,EAAE,UAAU,CAAC;KACxB,gBAAgB,GAAG,CAAC,CAAC,kBAAkB,EACtC,UAAU,EAAE,cAAc,EAC1B,MAAM,EAAE,UAAU,EAClB,OAAO,EAAE,UAAU,CAAC;KACrB,oBAAoB,GAAG,CAAC,CAAC,sBAAsB,EAC9C,UAAU,EAAE,kBAAkB,EAC9B,MAAM,EAAE,OAAO,EACf,OAAO,EAAE,UAAU,CAAC;KACrB,gBAAgB,GAAG,CAAC,CAAC,kBAAkB,EACtC,UAAU,EAAE,cAAc,EAC1B,UAAU,EAAE,UAAU,EACtB,QAAQ,EAAE,OAAO,CAAC;KACnB,iBAAiB,GAAG,CAAC,CAAC,mBAAmB,EACxC,UAAU,EAAE,eAAe,EAC3B,MAAM,EAAE,UAAU,EAClB,OAAO,EAAE,UAAU,CAAC;KACrB,qBAAqB,GAAG,CAAC,CAAC,uBAAuB,EAChD,MAAM,EAAE,UAAU,EAClB,YAAY,EAAE,UAAU,EACxB,WAAW,EAAE,UAAU,CAAC;KACzB,aAAa,GAAG,CAAC,CAAC,eAAe,EAChC,QAAQ,EAAE,UAAU,EACpB,WAAW,EAAE,CAAC,UAAU,CAAC,CAAC;KAC3B,cAAc,GAAG,CAAC,CAAC,gBAAgB,EAClC,QAAQ,EAAE,UAAU,EACpB,WAAW,EAAE,CAAC,UAAU,CAAC,CAAC;KAC3B,gBAAgB,GAAG,CAAC,CAAC,kBAAkB,EACtC,QAAQ,EAAE,UAAU,EACpB,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,OAAO,CAAC;KACrB,eAAe,GAAG,CAAC,CAAC,iBAAiB,EACpC,UAAU,EAAE,UAAU,EACtB,UAAU,EAAE,OAAO,CAAC;;;;AAGrB,QAAO,GAAG,CAAC,CAAC,SAAS,EAAE,OAAO,EAAE,MAAM,CAAC;;;;AAGvC,mBAAkB,GAAG,KAAK,CACzB,QAAQ,CAAC,QAAQ,CAAC,CAAC,oBAAoB,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,CAAC,EAC7E;AACC,MAAI,EAAE,UAAU;AAChB,MAAI,EAAE,MAAM;AACZ,QAAM,EAAE,KAAK;AACb,eAAa,EAAA,yBAAG;AACf,OAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAA;AACtB,OAAI,CAAC,IAAI,GAAG,MAAM,CAAA;GAClB;EACD,CAAC;KACH,aAAa,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,eAAe,EAChD,YAAY,EAAE,CAAC,kBAAkB,CAAC,CAAC;KACpC,YAAY,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,cAAc,EAC9C,UAAU,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;KACjC,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,aAAa,EAC5C,UAAU,EAAE,OAAO,CAAC;;;;;;;AAMrB,iBAAgB,GAAG,CAAC,CAAC,kBAAkB,EACtC,KAAK,EAAE,UAAU,EACjB,OAAO,EAAE,kBAAkB,EAC3B,MAAM,EAAE,oBAAoB,EAC5B,QAAQ,EAAE,OAAO,EACjB,UAAU,EAAE,OAAO,CAAC;KACrB,SAAS,GAAG,CAAC,CAAC,WAAW,EACxB,MAAM,EAAE,CAAC,gBAAgB,CAAC,CAAC;KAC5B,KAAK;WAAS,KAAK;yBAAL,KAAK;;;;;;;YAAL,KAAK;;SAAL,KAAK;IAAS,IAAI,CAAI;;;AAEpC,iBAAgB,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,kBAAkB,EACpD,IAAI,EAAE,UAAU,EAChB,YAAY,EAAE,UAAU,EACxB,MAAM,EAAE,SAAS,CAAC;KACnB,eAAe,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,iBAAiB,EAClD,IAAI,EAAE,UAAU,EAChB,YAAY,EAAE,UAAU,EACxB,MAAM,EAAE,SAAS,CAAC;KAEnB,eAAe;WAAS,eAAe;yBAAf,eAAe;;;;;;;YAAf,eAAe;;SAAf,eAAe;IAAS,IAAI,CAAI;KAExD,uBAAuB;WAAS,uBAAuB;yBAAvB,uBAAuB;;;;;;;YAAvB,uBAAuB;;SAAvB,uBAAuB;IAAS,IAAI,CAAI;KACxE,iBAAiB,GAAG,CAAC,CAAC,mBAAmB,EACxC,YAAY,EAAE,CAAC,uBAAuB,CAAC;;AAEvC,SAAQ,EAAE,OAAO,CAAC;KACnB,eAAe,GAAG,KAAK,CACtB,QAAQ,CAAC,eAAe,CAAC,CAAC,iBAAiB,EAC1C,UAAU,EAAE,UAAU,EACtB,OAAO,EAAE,UAAU,CAAC,EACrB;AACC,eAAa,EAAA,yBAAG;AACf,OAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAA;GAC3B;EACD,CAAC;KACH,sBAAsB,GAAG,QAAQ,CAAC,uBAAuB,CAAC,CAAC,wBAAwB,EAClF,OAAO,EAAE,UAAU,CAAC;KACrB,wBAAwB,GAAG,QAAQ,CAAC,uBAAuB,CAAC,CAAC,0BAA0B,EACtF,OAAO,EAAE,UAAU,CAAC;KAErB,eAAe,GAAG,KAAK,CACtB,QAAQ,CAAC,eAAe,CAAC,CAAC,iBAAiB,EAC1C,UAAU,EAAE,UAAU,EACtB,OAAO,EAAE,UAAU,CAAC,EACrB;AACC,eAAa,EAAA,yBAAG;AACf,OAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAA;GAC3B;EACD,CAAC;KACH,sBAAsB,GAAG,CAAC,CAAC,wBAAwB,EAClD,aAAa,EAAE,QAAQ,CAAC,WAAW,CAAC,EACpC,YAAY,EAAE,CAAC,eAAe,CAAC;;AAE/B,SAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC;KAC7B,wBAAwB,GAAG,CAAC,CAAC,0BAA0B,EACtD,aAAa,EAAE,KAAK,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;KAC/C,oBAAoB,GAAG,CAAC,CAAC,sBAAsB;;AAE9C,SAAQ,EAAE,OAAO,CAAC,CAAA;SAtOnB,OAAO,GAAP,OAAO;SAEP,UAAU,GAAV,UAAU;SAIV,cAAc,GAAd,cAAc;SACd,cAAc,GAAd,cAAc;SAEd,mBAAmB,GAAnB,mBAAmB;SAEnB,WAAW,GAAX,WAAW;SAIX,gBAAgB,GAAhB,gBAAgB;SAGhB,cAAc,GAAd,cAAc;SAEd,iBAAiB,GAAjB,iBAAiB;SAEjB,UAAU,GAAV,UAAU;SAGV,eAAe,GAAf,eAAe;SAIf,eAAe,GAAf,eAAe;SAEf,cAAc,GAAd,cAAc;SAGd,WAAW,GAAX,WAAW;SAGX,YAAY,GAAZ,YAAY;SAIZ,cAAc,GAAd,cAAc;SAGd,gBAAgB,GAAhB,gBAAgB;SAGhB,YAAY,GAAZ,YAAY;SAKZ,cAAc,GAAd,cAAc;SAId,cAAc,GAAd,cAAc;SAId,iBAAiB,GAAjB,iBAAiB;SAIjB,mBAAmB,GAAnB,mBAAmB;SAMnB,kBAAkB,GAAlB,kBAAkB;SAGlB,mBAAmB,GAAnB,mBAAmB;SAKnB,cAAc,GAAd,cAAc;SACd,eAAe,GAAf,eAAe;SAEf,QAAQ,GAAR,QAAQ;SAKR,gBAAgB,GAAhB,gBAAgB;SAGhB,kBAAkB,GAAlB,kBAAkB;SAYlB,uBAAuB,GAAvB,uBAAuB;SAGvB,kBAAkB,GAAlB,kBAAkB;SAElB,eAAe,GAAf,eAAe;SAGf,gBAAgB,GAAhB,gBAAgB;SAIhB,oBAAoB,GAApB,oBAAoB;SAIpB,gBAAgB,GAAhB,gBAAgB;SAIhB,iBAAiB,GAAjB,iBAAiB;SAIjB,qBAAqB,GAArB,qBAAqB;SAIrB,aAAa,GAAb,aAAa;SAGb,cAAc,GAAd,cAAc;SAGd,gBAAgB,GAAhB,gBAAgB;SAIhB,eAAe,GAAf,eAAe;SAKf,OAAO,GAAP,OAAO;SAGP,kBAAkB,GAAlB,kBAAkB;SAYlB,aAAa,GAAb,aAAa;SAEb,YAAY,GAAZ,YAAY;SAEZ,WAAW,GAAX,WAAW;SAOX,gBAAgB,GAAhB,gBAAgB;SAMhB,SAAS,GAAT,SAAS;SAET,KAAK,GAAL,KAAK;SAEL,gBAAgB,GAAhB,gBAAgB;SAIhB,eAAe,GAAf,eAAe;SAKf,eAAe,GAAf,eAAe;SAEf,uBAAuB,GAAvB,uBAAuB;SACvB,iBAAiB,GAAjB,iBAAiB;SAIjB,eAAe,GAAf,eAAe;SAUf,sBAAsB,GAAtB,sBAAsB;SAEtB,wBAAwB,GAAxB,wBAAwB;SAGxB,eAAe,GAAf,eAAe;SAUf,sBAAsB,GAAtB,sBAAsB;SAKtB,wBAAwB,GAAxB,wBAAwB;SAExB,oBAAoB,GAApB,oBAAoB","file":"ast.js","sourcesContent":["import Loc from './Loc'\nimport tuple from './private/tuple'\nimport { assert, pAdd } from './private/util'\n\nexport class Node { }\nexport class Statement extends Node { }\nexport class Expression extends Node { }\n\nexport class Function extends Node { }\nexport class Declaration extends Node { }\nexport class Pattern extends Node { }\n\nconst makeType = superType => (name, ...namesTypes) => {\n\tconst type = tuple(name, superType, ...namesTypes)\n\tObject.assign(type.prototype, { type: name })\n\treturn type\n}\nconst\n\tn = makeType(Node),\n\ts = makeType(Statement),\n\te = makeType(Expression)\n\n// TODO\nconst nullable = _ => _\nconst union = (a, b) => b\n\nconst proto = (_, protoProps) => {\n\tObject.assign(_.prototype, protoProps)\n\treturn _\n}\n\nexport const\n\tUnaryOperator = new Set([ '-', '+', '!', '~', 'typeof', 'void', 'delete' ]),\n\tBinaryOperator = new Set([\n\t\t'==', '!=', '===', '!==',\n\t\t'<', '<=', '>', '>=',\n\t\t'<<', '>>', '>>>',\n\t\t'+', '-', '*', '/', '%',\n\t\t'|', '^', '&', 'in',\n\t\t'instanceof']),\n\tLogicalOperator = new Set([ '||', '&&' ]),\n\tAssignmentOperator = new Set([\n\t\t'=', '+=', '-=', '*=', '/=', '%=',\n\t\t'<<=', '>>=', '>>>=',\n\t\t'|=', '^=', '&='\n\t]),\n\tUpdateOperator = new Set([ '++', '--' ]),\n\tMethodDefinitionKind = new Set([ 'constructor', 'method', 'get', 'set' ]),\n\tPropertyKind = new Set([ 'init', 'get', 'set' ])\n\nexport const\n\tProgram = n('Program',\n\t\t'body', [Statement]),\n\tIdentifier = n('Identifier',\n\t\t'name', String),\n\n\t// Statements\n\tEmptyStatement = s('EmptyStatement'),\n\tBlockStatement = s('BlockStatement',\n\t\t'body', [Statement]),\n\tExpressionStatement = s('ExpressionStatement',\n\t\t'expression', Expression),\n\tIfStatement = s('IfStatement',\n\t\t'test', Expression,\n\t\t'consequent', Statement,\n\t\t'alternate', nullable(Statement)),\n\tLabeledStatement = s('LabeledStatement',\n\t\t'label', Identifier,\n\t\t'body', Statement),\n\tBreakStatement = s('BreakStatement',\n\t\t'label', nullable(Identifier)),\n\tContinueStatement = s('ContinueStatement',\n\t\t'label', nullable(Identifier)),\n\tSwitchCase = n('SwitchCase',\n\t\t'test', Expression,\n\t\t'consequent', [Statement]),\n\tSwitchStatement = s('SwitchStatement',\n\t\t'discriminant', Expression,\n\t\t'cases', [SwitchCase],\n\t\t'lexical', Boolean),\n\tReturnStatement = s('ReturnStatement',\n\t\t'argument', Expression),\n\tThrowStatement = s('ThrowStatement',\n\t\t'argument', Expression),\n\n\tCatchClause = n('CatchClause',\n\t\t'param', Pattern,\n\t\t'body', BlockStatement),\n\tTryStatement = s('TryStatement',\n\t\t'block', BlockStatement,\n\t\t'handler', nullable(CatchClause),\n\t\t'finalizer', nullable(BlockStatement)),\n\tWhileStatement = s('WhileStatement',\n\t\t'test', Expression,\n\t\t'body', Statement),\n\tDoWhileStatement = s('DoWhileStatement',\n\t\t'body', Statement,\n\t\t'test', Expression),\n\tForStatement = s('ForStatement',\n\t\t'init', nullable(union(VariableDeclaration, Expression)),\n\t\t'test', nullable(Expression),\n\t\t'update', nullable(Expression),\n\t\t'body', Statement),\n\tForInStatement = s('ForInStatement',\n\t\t'left', union(VariableDeclaration, Expression),\n\t\t'right', Expression,\n\t\t'body', Statement),\n\tForOfStatement = s('ForOfStatement',\n\t\t'left', union(VariableDeclaration, Expression),\n\t\t'right', Expression,\n\t\t'body', Statement),\n\tDebuggerStatement = s('DebuggerStatement'),\n\n\t// Declarations\n\t// TODO: Function too\n\tFunctionDeclaration = makeType(Declaration)('FunctionDeclaration',\n\t\t'id', Identifier,\n\t\t'params', [Identifier],\n\t\t'body', BlockStatement,\n\t\t'generator', Boolean),\n\n\tVariableDeclarator = n('VariableDeclarator',\n\t\t'id', Pattern,\n\t\t'init', Expression),\n\tVariableDeclaration = makeType(Declaration)('VariableDeclaration',\n\t\t'kind', String,\n\t\t'declarations', [VariableDeclarator]),\n\n\t// Expressions\n\tThisExpression = e('ThisExpression'),\n\tArrayExpression = e('ArrayExpression',\n\t\t'elements', [Expression]),\n\tProperty = n('Property',\n\t\t'kind', PropertyKind,\n\t\t// TODO: LiteralString | LiteralNumber\n\t\t'key', union(Literal, Identifier),\n\t\t'value', Expression),\n\tObjectExpression = e('ObjectExpression',\n\t\t'properties', [Property]),\n\t// TODO: Inherits from Function\n\tFunctionExpression = proto(\n\t\te('FunctionExpression',\n\t\t\t'id', Identifier,\n\t\t\t'params', [Identifier],\n\t\t\t'body', BlockStatement,\n\t\t\t'generator', Boolean),\n\t\t{\n\t\t\tpostConstruct() {\n\t\t\t\tthis.generator = Boolean(this.generator)\n\t\t\t}\n\t\t}),\n\t// TODO: Inherits from Function\n\tArrowFunctionExpression = e('ArrowExpression',\n\t\t'params', [Pattern],\n\t\t'body', union(BlockStatement, Expression)),\n\tSequenceExpression = e('SequenceExpression',\n\t\t'expressions', [ Expression ]),\n\tUnaryExpression = e('UnaryExpression',\n\t\t'operator', UnaryOperator,\n\t\t'argument', Expression),\n\tBinaryExpression = e('BinaryExpression',\n\t\t'operator', BinaryOperator,\n\t\t'left', Expression,\n\t\t'right', Expression),\n\tAssignmentExpression = e('AssignmentExpression',\n\t\t'operator', AssignmentOperator,\n\t\t'left', Pattern,\n\t\t'right', Expression),\n\tUpdateExpression = e('UpdateExpression',\n\t\t'operator', UpdateOperator,\n\t\t'argument', Expression,\n\t\t'prefix', Boolean),\n\tLogicalExpression = e('LogicalExpression',\n\t\t'operator', LogicalOperator,\n\t\t'left', Expression,\n\t\t'right', Expression),\n\tConditionalExpression = e('ConditionalExpression',\n\t\t'test', Expression,\n\t\t'consequent', Expression,\n\t\t'alternate', Expression),\n\tNewExpression = e('NewExpression',\n\t\t'callee', Expression,\n\t\t'arguments', [Expression]),\n\tCallExpression = e('CallExpression',\n\t\t'callee', Expression,\n\t\t'arguments', [Expression]),\n\tMemberExpression = e('MemberExpression',\n\t\t'object', Expression,\n\t\t'property', Identifier,\n\t\t'computed', Boolean),\n\tYieldExpression = e('YieldExpression',\n\t\t'argument', Expression,\n\t\t'delegate', Boolean),\n\t// TODO: Literal as abstract type\n\t// Value: Number | String | null | Boolean\n\tLiteral = e('Literal', 'value', Object),\n\n\t// Patterns\n\tAssignmentProperty = proto(\n\t\tmakeType(Property)('AssignmentProperty', 'key', Identifier, 'value', Pattern),\n\t\t{\n\t\t\ttype: 'Property',\n\t\t\tkind: 'init',\n\t\t\tmethod: false,\n\t\t\tpostConstruct() {\n\t\t\t\tif (this.value === null)\n\t\t\t\t\tthis.value = this.key\n\t\t\t\tthis.kind = 'init'\n\t\t\t}\n\t\t}),\n\tObjectPattern = makeType(Pattern)('ObjectPattern',\n\t\t'properties', [AssignmentProperty]),\n\tArrayPattern = makeType(Pattern)('ArrayPattern',\n\t\t'elements', [nullable(Pattern)]),\n\tRestElement = makeType(Pattern)('RestElement',\n\t\t'argument', Pattern),\n\t// TODO: What is this?\n\t// AssignmentPattern = p('AssignmentPattern',\n\t//\t'left', Pattern,\n\t//\t'right', Pattern),\n\n\tMethodDefinition = n('MethodDefinition',\n\t\t'key', Identifier,\n\t\t'value', FunctionExpression,\n\t\t'kind', MethodDefinitionKind,\n\t\t'static', Boolean,\n\t\t'computed', Boolean),\n\tClassBody = n('ClassBody',\n\t\t'body', [MethodDefinition]),\n\tClass = class Class extends Node { },\n\t// TODO: extends Declaration too\n\tClassDeclaration = makeType(Class)('ClassDeclaration',\n\t\t'id', Identifier,\n\t\t'superClass', Expression,\n\t\t'body', ClassBody),\n\tClassExpression = makeType(Class)('ClassExpression',\n\t\t'id', Identifier,\n\t\t'superClass', Expression,\n\t\t'body', ClassBody),\n\n\tModuleSpecifier = class ModuleSpecifier extends Node { },\n\n\tImportSpecifierAbstract = class ImportSpecifierAbstract extends Node { },\n\tImportDeclaration = n('ImportDeclaration',\n\t\t'specifiers', [ImportSpecifierAbstract],\n\t\t// TODO: LiteralString\n\t\t'source', Literal),\n\tImportSpecifier = proto(\n\t\tmakeType(ModuleSpecifier)('ImportSpecifier',\n\t\t\t'imported', Identifier,\n\t\t\t'local', Identifier),\n\t\t{\n\t\t\tpostConstruct() {\n\t\t\t\tif (this.local === null)\n\t\t\t\t\tthis.local = this.imported\n\t\t\t}\n\t\t}),\n\tImportDefaultSpecifier = makeType(ImportSpecifierAbstract)('ImportDefaultSpecifier',\n\t\t'local', Identifier),\n\tImportNamespaceSpecifier = makeType(ImportSpecifierAbstract)('ImportNamespaceSpecifier',\n\t\t'local', Identifier),\n\n\tExportSpecifier = proto(\n\t\tmakeType(ModuleSpecifier)('ExportSpecifier',\n\t\t\t'exported', Identifier,\n\t\t\t'local', Identifier),\n\t\t{\n\t\t\tpostConstruct() {\n\t\t\t\tif (this.local === null)\n\t\t\t\t\tthis.local = this.exported\n\t\t\t}\n\t\t}),\n\tExportNamedDeclaration = n('ExportNamedDeclaration',\n\t\t'declaration', nullable(Declaration),\n\t\t'specifiers', [ExportSpecifier],\n\t\t// TODO: LiteralString\n\t\t'source', nullable(Literal)),\n\tExportDefaultDeclaration = n('ExportDefaultDeclaration',\n\t\t'declaration', union(Declaration, Expression)),\n\tExportAllDeclaration = n('ExportAllDeclaration',\n\t\t// TODO:LiteralString\n\t\t'source', Literal)\n"],"sourceRoot":"/src"}