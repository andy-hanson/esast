{"version":3,"sources":["fromJSON.js"],"names":[],"mappings":";;;;;;;kBAIe,UAAA,IAAI,EAAI;AACtB,MAAI,OAAO,IAAI,KAAK,QAAQ,EAC3B,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;AACxB,SAAO,cAAc,CAAC,IAAI,CAAC,CAAA;EAC3B;;AAED,KAAM,cAAc,GAAG,wBAAA,IAAI,EAAI;AAC9B,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAA;AACjC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAA;AACpB,MAAI,GAAG,KAAK,SAAS,EACpB,GAAG,CAAC,GAAG,GAAG,MAAI,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;AAC5D,SAAO,GAAG,CAAA;EACV,CAAA;;AAED,KAAM,WAAW,GAAG,qBAAA,CAAC;SAAI,KAjBX,GAAG,CAiBY,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC;EAAA,CAAA;;AAE9C,KAAM,OAAO;;;;;;;;;;IAAG,UAAC,IAAI,EAAE,IAAI;SAC1B,IAAI,YAAY,KAAK,QACjB,IAAI,kCAA6B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;;AAEzD,MAAI,KAAK,MAAM,GACf,IAAI,GACJ,AAAC,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,OAAO,IAAI,IAAI,YAAY,GAAG,GAC3D,IAAI,GACJ,IAAI,yBA1BG,QAAQ,AA0BS,QACrB,IAAI,0BAAqB,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GACpD,IAAI,CAAC,OAAO,aACJ,IAAI,CAAC,IAAI,SAAI,IAAI,6BACP,IAAI,MAAG;EAAA,CAAA,CAAA;;AAE3B,KAAM,YAAY,GAAG,sBAAA,KAAK,EAAI;AAC7B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;OAAG,IAAI,QAAJ,IAAI;OAAE,IAAI,QAAJ,IAAI;UAAO,OAAO,CAAC,IAAI,SAAO,IAAI,CAAG;GAAA,CAAC,CAAA;AAC7E,MAAM,GAAG,8CAA4C,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAK,CAAA;AAC1E,SAAO,QAAQ,CAAC,OAAO,EAAE,gBAAgB,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,cAAc,EAAE,IAAI,CAAC,CAAA;EACpF,CAAA;;AAED,KAAM,IAAI,GAAG,EAAG,CAAA;AAChB,OAAM,CAAC,IAAI,MAAK,CAAC,OAAO,CAAC,UAAS,GAAG,EAAE;AACtC,MAAM,KAAK,GAAG,KAAI,GAAG,CAAC,CAAA;AACtB,MAAI,KAAK,CAAC,OAAO,EAChB,IAAI,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,CAAA;EAChC,CAAC,CAAA;AACF,OAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA","file":"fromJSON.js","sourcesContent":["import * as Ast from './ast'\nimport Loc, { Pos } from './Loc'\nimport { Nullable } from './private/type'\n\nexport default json => {\n\tif (typeof json === 'string')\n\t\tjson = JSON.parse(json)\n\treturn fromJsonObject(json)\n}\n\nconst fromJsonObject = json => {\n\tconst obj = make[json.type](json)\n\tconst loc = json.loc\n\tif (loc !== undefined)\n\t\tobj.loc = Loc(posFromJson(loc.start), posFromJson(loc.end))\n\treturn obj\n}\n\nconst posFromJson = _ => Pos(_.line, _.column)\n\nconst typeCtr = (type, prop) =>\n\ttype instanceof Array ?\n\t\t`${prop}.map(function(_) { return ${typeCtr(type[0], '_')} })` :\n\t\t// TODO:KLUDGE for Literal\n\t\ttype === Object ?\n\t\tprop :\n\t\t(type === String || type === Boolean || type instanceof Set) ?\n\t\tprop :\n\t\ttype instanceof Nullable ?\n\t\t`${prop} == null ? null : ${typeCtr(type.type, prop)}` :\n\t\ttype.isTuple ?\n\t\t`make.${type.name}(${prop})` :\n\t\t`fromJsonObject(${prop})`\n\nconst makeFromJson = tuple => {\n\tconst parts = tuple.props.map(({ name, type }) => typeCtr(type, `_.${name}`))\n\tconst src = `return function(_) { return new tuple(${parts.join(', ')}) }`\n\treturn Function('tuple', 'fromJsonObject', 'make', src)(tuple, fromJsonObject, make)\n}\n\nconst make = { }\nObject.keys(Ast).forEach(function(key) {\n\tconst tuple = Ast[key]\n\tif (tuple.isTuple)\n\t\tmake[key] = makeFromJson(tuple)\n})\nObject.freeze(make)\n"],"sourceRoot":"/src"}